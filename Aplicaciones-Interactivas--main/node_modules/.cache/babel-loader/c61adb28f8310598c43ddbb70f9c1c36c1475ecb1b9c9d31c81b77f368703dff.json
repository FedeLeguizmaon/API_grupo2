{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\API\\\\Codigo\\\\API_grupo2\\\\Aplicaciones-Interactivas--main\\\\src\\\\componentes\\\\HistorialDePedidos.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addProduct, changeProduct } from \"./Redux/ProductoSlice\";\nimport { deleteProduct } from \"./Redux/ProductoSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HistorialDePedidos = () => {\n  _s();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(\"\");\n  const handlerHistorial = async () => {\n    try {\n      const response = await fetch(`http://localhost:4002/Pedido/historial?mail=${user.Mail}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${user.Token}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(`${data.message}`);\n      } else {\n        setMessage(`Error: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error al buscar el producto:', error);\n      setMessage(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Pedidos de \", user.Nombre, user.Apellido]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hice la logica del fetch falta Ver donde guardarlos, supongo que plantearemos redux, o como vos hagas el catalogo aca tendria que ser parecido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(HistorialDePedidos, \"72cV7O9r+9Qlw2YlVR9HdYV55J4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = HistorialDePedidos;\nexport default HistorialDePedidos;\nvar _c;\n$RefreshReg$(_c, \"HistorialDePedidos\");","map":{"version":3,"names":["useState","useDispatch","useSelector","addProduct","changeProduct","deleteProduct","jsxDEV","_jsxDEV","Fragment","_Fragment","HistorialDePedidos","_s","user","state","dispatch","message","setMessage","handlerHistorial","response","fetch","Mail","method","headers","Token","data","json","ok","error","console","children","Nombre","Apellido","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/API/Codigo/API_grupo2/Aplicaciones-Interactivas--main/src/componentes/HistorialDePedidos.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { addProduct, changeProduct } from \"./Redux/ProductoSlice\";\r\nimport { deleteProduct } from \"./Redux/ProductoSlice\";\r\n\r\nconst HistorialDePedidos=()=>{\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch()\r\n    const [message, setMessage] = useState(\"\");\r\n    const handlerHistorial = async ()=>{\r\n        try {\r\n            const response = await fetch(`http://localhost:4002/Pedido/historial?mail=${user.Mail}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${user.Token}`,\r\n                }\r\n            });\r\n    \r\n            const data = await response.json();\r\n    \r\n            if (response.ok) {\r\n                setMessage(`${data.message}`);\r\n            } else {\r\n                setMessage(`Error: ${data.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al buscar el producto:', error);\r\n            setMessage(`Error: ${error.message}`);\r\n        }\r\n    };\r\n    return(\r\n        <>\r\n        <h1>Pedidos de {user.Nombre}{user.Apellido}</h1>\r\n        <h1>Hice la logica del fetch falta Ver donde guardarlos, supongo que plantearemos redux, o como vos hagas el catalogo aca tendria que ser parecido</h1>\r\n        </>\r\n    )\r\n}\r\nexport default  HistorialDePedidos;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,UAAU,EAAEC,aAAa,QAAQ,uBAAuB;AACjE,SAASC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,kBAAkB,GAACA,CAAA,KAAI;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAC/C,MAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAU;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CP,IAAI,CAACQ,IAAK,EAAC,EAAE;QACrFC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASV,IAAI,CAACW,KAAM;QAC1C;MACJ,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACbV,UAAU,CAAE,GAAEQ,IAAI,CAACT,OAAQ,EAAC,CAAC;MACjC,CAAC,MAAM;QACHC,UAAU,CAAE,UAASQ,IAAI,CAACT,OAAQ,EAAC,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDX,UAAU,CAAE,UAASW,KAAK,CAACZ,OAAQ,EAAC,CAAC;IACzC;EACJ,CAAC;EACD,oBACIR,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACAtB,OAAA;MAAAsB,QAAA,GAAI,aAAW,EAACjB,IAAI,CAACkB,MAAM,EAAElB,IAAI,CAACmB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChD5B,OAAA;MAAAsB,QAAA,EAAI;IAA8I;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACrJ,CAAC;AAEX,CAAC;AAAAxB,EAAA,CAhCKD,kBAAkB;EAAA,QACPR,WAAW,EACPD,WAAW;AAAA;AAAAmC,EAAA,GAF1B1B,kBAAkB;AAiCxB,eAAgBA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}