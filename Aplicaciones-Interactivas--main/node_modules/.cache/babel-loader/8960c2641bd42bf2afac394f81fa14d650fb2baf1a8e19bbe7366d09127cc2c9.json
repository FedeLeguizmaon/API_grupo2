{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\federico\\\\OneDrive\\\\Documents\\\\GitHub\\\\API_grupo2\\\\Aplicaciones-Interactivas--main\\\\src\\\\componentes\\\\FormularioCambiarCorreo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeMail } from \"./Redux/UserSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormularioCambiarCorreo = () => {\n  _s();\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const handleChangeEmail = async () => {\n    try {\n      const response = await fetch(`http://localhost:4002/Usuario/cambiarMail`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${user.Token}`\n        },\n        body: JSON.stringify({\n          mailAct: user.Mail,\n          mailNuevo: newEmail\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        dispatch(changeMail(newEmail));\n        console.log(\"Nuevo correo en el store:\", newEmail);\n        setMessage(\"Email cambiado exitosamente.\");\n      } else {\n        setMessage(`Error: ${data.message}`);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessage(\"Error al cambiar el email.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"etiqueta\",\n        children: \"Correo Electronico Nuevo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo electronico nuevo\",\n        value: newEmail,\n        onChange: e => setNewEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChangeEmail,\n        children: \"Cambiar Correo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n_s(FormularioCambiarCorreo, \"bQW4NzXN48Wnr3Z5KKZTkpoiKdw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FormularioCambiarCorreo;\nexport default FormularioCambiarCorreo;\nvar _c;\n$RefreshReg$(_c, \"FormularioCambiarCorreo\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","changeMail","jsxDEV","_jsxDEV","Fragment","_Fragment","FormularioCambiarCorreo","_s","newEmail","setNewEmail","message","setMessage","dispatch","user","state","handleChangeEmail","response","fetch","method","headers","Token","body","JSON","stringify","mailAct","Mail","mailNuevo","data","json","ok","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/federico/OneDrive/Documents/GitHub/API_grupo2/Aplicaciones-Interactivas--main/src/componentes/FormularioCambiarCorreo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { changeMail } from \"./Redux/UserSlice\";\r\n\r\nconst FormularioCambiarCorreo =()=>{\r\n    const [newEmail, setNewEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const handleChangeEmail = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:4002/Usuario/cambiarMail`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${user.Token}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    mailAct: user.Mail,\r\n                    mailNuevo: newEmail,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                dispatch(changeMail(newEmail));\r\n                console.log(\"Nuevo correo en el store:\", newEmail);\r\n                setMessage(\"Email cambiado exitosamente.\");\r\n            } else {\r\n                setMessage(`Error: ${data.message}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            setMessage(\"Error al cambiar el email.\");\r\n        }\r\n    };\r\n    \r\n    return(\r\n        <>\r\n         <div className=\"Input\">\r\n                <label className=\"etiqueta\">Correo Electronico Nuevo:</label>\r\n                <input\r\n                            type=\"email\"\r\n                            placeholder=\"Correo electronico nuevo\"\r\n                            value={newEmail}\r\n                            onChange={(e) => setNewEmail(e.target.value)}\r\n                        />\r\n            \r\n            <button onClick={handleChangeEmail}>Cambiar Correo</button>\r\n            </div>\r\n            {message && <p>{message}</p>}\r\n        </>\r\n    )\r\n}\r\nexport default FormularioCambiarCorreo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,uBAAuB,GAAEA,CAAA,KAAI;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,IAAI,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAE/C,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0C,EAAE;QACtEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASN,IAAI,CAACO,KAAM;QAC1C,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,OAAO,EAAEX,IAAI,CAACY,IAAI;UAClBC,SAAS,EAAElB;QACf,CAAC;MACL,CAAC,CAAC;MACF,MAAMmB,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClC,IAAIZ,QAAQ,CAACa,EAAE,EAAE;QACbjB,QAAQ,CAACX,UAAU,CAACO,QAAQ,CAAC,CAAC;QAC9BsB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEvB,QAAQ,CAAC;QAClDG,UAAU,CAAC,8BAA8B,CAAC;MAC9C,CAAC,MAAM;QACHA,UAAU,CAAE,UAASgB,IAAI,CAACjB,OAAQ,EAAC,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BrB,UAAU,CAAC,4BAA4B,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACC9B,OAAA;MAAK+B,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACf9B,OAAA;QAAO+B,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7DnC,OAAA;QACYoC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,0BAA0B;QACtCC,KAAK,EAAEjC,QAAS;QAChBkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAEdnC,OAAA;QAAQ0C,OAAO,EAAE9B,iBAAkB;QAAAkB,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,EACL5B,OAAO,iBAAIP,OAAA;MAAA8B,QAAA,EAAIvB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAC9B,CAAC;AAEX,CAAC;AAAA/B,EAAA,CAjDKD,uBAAuB;EAAA,QAGRP,WAAW,EACfC,WAAW;AAAA;AAAA8C,EAAA,GAJtBxC,uBAAuB;AAkD7B,eAAeA,uBAAuB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}