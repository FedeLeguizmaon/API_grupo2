{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\API\\\\Codigo\\\\API_grupo2\\\\Aplicaciones-Interactivas--main\\\\src\\\\componentes\\\\GestionProductos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport FormularioAgregarProducto from \"./FormularioAgregarProducto\";\nimport FormularioModificarProducto from './FormularioModificarProducto';\nimport { useNavigate } from 'react-router-dom';\n/*\r\nfunction AgregarProducto({ onAdd }) {\r\n    const [producto, setProducto] = useState({\r\n        Id: \"\",\r\n        Nombre: \"\",\r\n        Descripcion: \"\",\r\n        Stock: \"\",\r\n        Precio: \"\",\r\n        Imagen: \"\",\r\n        Talle: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setProducto({ ...producto, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n          const response = await fetch(`http://localhost:4002/Usuario/${user.Mail}/${newPassword}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.Token}`,\r\n            },\r\n        });\r\n            alert('Producto agregado correctamente');\r\n            setProducto({ Id: \"\", Nombre: '', Descripcion: '', Precio: '', Stock: '', Imagen: '', Talle: '' }); // Limpiar formulario\r\n            onAdd();\r\n        } catch (error) {\r\n            console.error('Error al agregar el producto:', error);\r\n            alert('Error al agregar el producto');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input name=\"Nombre\" value={producto.Nombre} onChange={handleChange} placeholder=\"Nombre del Producto\" />\r\n            <input name=\"Descripcion\" value={producto.Descripcion} onChange={handleChange} placeholder=\"Descripción\" />\r\n            <input name=\"Precio\" type=\"number\" value={producto.Precio} onChange={handleChange} placeholder=\"Precio\" />\r\n            <input name=\"Stock\" type=\"number\" value={producto.Stock} onChange={handleChange} placeholder=\"Stock\" />\r\n            <input name=\"Imagen\" value={producto.Imagen} onChange={handleChange} placeholder=\"URL de la Imagen\" />\r\n            <input name=\"Talle\" value={producto.Talle} onChange={handleChange} placeholder=\"Talle del Producto\" />\r\n            <button type=\"submit\">Agregar Producto</button>\r\n        </form>\r\n    );\r\n}*/\n\n/*function ModificarProducto({ onUpdate }) {\r\n    const [id, setId] = useState('');\r\n    const [producto, setProducto] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const buscarProducto = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4002/productos/${id}`);\r\n            setProducto(response.data);\r\n        } catch (error) {\r\n            console.error('Error al buscar el producto:', error);\r\n            setError('Producto no encontrado');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setProducto({ ...producto, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.put(`http://localhost:4002/productos/editProducto`, producto);\r\n            alert('Producto modificado correctamente');\r\n            onUpdate();\r\n        } catch (error) {\r\n            console.error('Error al modificar el producto:', error);\r\n            alert('Error al modificar el producto');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input value={id} onChange={(e) => setId(e.target.value)} placeholder=\"ID del Producto\" />\r\n            <button onClick={buscarProducto}>Buscar Producto</button>\r\n            {error && <p>{error}</p>}\r\n            {producto && (\r\n                <form onSubmit={handleSubmit}>\r\n                    <input name=\"Nombre\" value={producto.Nombre} onChange={handleChange} placeholder=\"Nombre del Producto\" />\r\n                    <input name=\"Descripcion\" value={producto.Descripcion} onChange={handleChange} placeholder=\"Descripción\" />\r\n                    <input name=\"Precio\" type=\"number\" value={producto.Precio} onChange={handleChange} placeholder=\"Precio\" />\r\n                    <input name=\"Stock\" type=\"number\" value={producto.Stock} onChange={handleChange} placeholder=\"Stock\" />\r\n                    <input name=\"Imagen\" value={producto.Imagen} onChange={handleChange} placeholder=\"URL de la Imagen\" />\r\n                    <input name=\"Talle\" value={producto.Talle} onChange={handleChange} placeholder=\"Talle del Producto\" />\r\n                    <button type=\"submit\">Guardar Cambios</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );*/\n\n/*\r\nfunction EliminarProducto({ onDelete }) {\r\n    const [id, setId] = useState('');\r\n    const [producto, setProducto] = useState(null);\r\n\r\n    const buscarProducto = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4002/productos/${id}`);\r\n            setProducto(response.data);\r\n        } catch (error) {\r\n            alert('Producto no encontrado');\r\n            setProducto(null);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        if (window.confirm('¿Está seguro de que desea eliminar este producto?')) {\r\n            try {\r\n                await axios.delete(`http://localhost:4002/productos/${id}`);\r\n                alert('Producto eliminado correctamente');\r\n                setProducto(null);\r\n                onDelete();\r\n            } catch (error) {\r\n                console.error('Error al eliminar el producto:', error);\r\n                alert('Error al eliminar el producto');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input value={id} onChange={(e) => setId(e.target.value)} placeholder=\"ID del Producto\" />\r\n            <button onClick={buscarProducto}>Buscar Producto</button>\r\n            {producto && (\r\n                <div>\r\n                    <p>{producto.Nombre}</p>\r\n                    <button onClick={handleDelete}>Eliminar Producto</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GestionProductos() {\n  _s();\n  const navigate = useNavigate();\n  const handlerModificar = () => {};\n  const handlerAgregar = () => {};\n  const handlerEliminar = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titulo\",\n      children: \"Gesti\\xF3n de Productos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerAgregar,\n      children: \"Agregar Producto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerModificar,\n      children: \"Modificar Producto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerEliminar,\n      children: \"Eliminar Producto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormularioAgregarProducto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(FormularioModificarProducto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(EliminarProducto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(GestionProductos, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = GestionProductos;\nexport default GestionProductos;\nvar _c;\n$RefreshReg$(_c, \"GestionProductos\");","map":{"version":3,"names":["React","useState","axios","FormularioAgregarProducto","FormularioModificarProducto","useNavigate","jsxDEV","_jsxDEV","GestionProductos","_s","navigate","handlerModificar","handlerAgregar","handlerEliminar","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","EliminarProducto","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/API/Codigo/API_grupo2/Aplicaciones-Interactivas--main/src/componentes/GestionProductos.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport FormularioAgregarProducto from \"./FormularioAgregarProducto\";\r\nimport FormularioModificarProducto from './FormularioModificarProducto';\r\nimport { useNavigate } from 'react-router-dom';\r\n/*\r\nfunction AgregarProducto({ onAdd }) {\r\n    const [producto, setProducto] = useState({\r\n        Id: \"\",\r\n        Nombre: \"\",\r\n        Descripcion: \"\",\r\n        Stock: \"\",\r\n        Precio: \"\",\r\n        Imagen: \"\",\r\n        Talle: \"\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setProducto({ ...producto, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n          const response = await fetch(`http://localhost:4002/Usuario/${user.Mail}/${newPassword}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${user.Token}`,\r\n            },\r\n        });\r\n            alert('Producto agregado correctamente');\r\n            setProducto({ Id: \"\", Nombre: '', Descripcion: '', Precio: '', Stock: '', Imagen: '', Talle: '' }); // Limpiar formulario\r\n            onAdd();\r\n        } catch (error) {\r\n            console.error('Error al agregar el producto:', error);\r\n            alert('Error al agregar el producto');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input name=\"Nombre\" value={producto.Nombre} onChange={handleChange} placeholder=\"Nombre del Producto\" />\r\n            <input name=\"Descripcion\" value={producto.Descripcion} onChange={handleChange} placeholder=\"Descripción\" />\r\n            <input name=\"Precio\" type=\"number\" value={producto.Precio} onChange={handleChange} placeholder=\"Precio\" />\r\n            <input name=\"Stock\" type=\"number\" value={producto.Stock} onChange={handleChange} placeholder=\"Stock\" />\r\n            <input name=\"Imagen\" value={producto.Imagen} onChange={handleChange} placeholder=\"URL de la Imagen\" />\r\n            <input name=\"Talle\" value={producto.Talle} onChange={handleChange} placeholder=\"Talle del Producto\" />\r\n            <button type=\"submit\">Agregar Producto</button>\r\n        </form>\r\n    );\r\n}*/\r\n\r\n/*function ModificarProducto({ onUpdate }) {\r\n    const [id, setId] = useState('');\r\n    const [producto, setProducto] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const buscarProducto = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4002/productos/${id}`);\r\n            setProducto(response.data);\r\n        } catch (error) {\r\n            console.error('Error al buscar el producto:', error);\r\n            setError('Producto no encontrado');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setProducto({ ...producto, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.put(`http://localhost:4002/productos/editProducto`, producto);\r\n            alert('Producto modificado correctamente');\r\n            onUpdate();\r\n        } catch (error) {\r\n            console.error('Error al modificar el producto:', error);\r\n            alert('Error al modificar el producto');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input value={id} onChange={(e) => setId(e.target.value)} placeholder=\"ID del Producto\" />\r\n            <button onClick={buscarProducto}>Buscar Producto</button>\r\n            {error && <p>{error}</p>}\r\n            {producto && (\r\n                <form onSubmit={handleSubmit}>\r\n                    <input name=\"Nombre\" value={producto.Nombre} onChange={handleChange} placeholder=\"Nombre del Producto\" />\r\n                    <input name=\"Descripcion\" value={producto.Descripcion} onChange={handleChange} placeholder=\"Descripción\" />\r\n                    <input name=\"Precio\" type=\"number\" value={producto.Precio} onChange={handleChange} placeholder=\"Precio\" />\r\n                    <input name=\"Stock\" type=\"number\" value={producto.Stock} onChange={handleChange} placeholder=\"Stock\" />\r\n                    <input name=\"Imagen\" value={producto.Imagen} onChange={handleChange} placeholder=\"URL de la Imagen\" />\r\n                    <input name=\"Talle\" value={producto.Talle} onChange={handleChange} placeholder=\"Talle del Producto\" />\r\n                    <button type=\"submit\">Guardar Cambios</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );*/\r\n\r\n/*\r\nfunction EliminarProducto({ onDelete }) {\r\n    const [id, setId] = useState('');\r\n    const [producto, setProducto] = useState(null);\r\n\r\n    const buscarProducto = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:4002/productos/${id}`);\r\n            setProducto(response.data);\r\n        } catch (error) {\r\n            alert('Producto no encontrado');\r\n            setProducto(null);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        if (window.confirm('¿Está seguro de que desea eliminar este producto?')) {\r\n            try {\r\n                await axios.delete(`http://localhost:4002/productos/${id}`);\r\n                alert('Producto eliminado correctamente');\r\n                setProducto(null);\r\n                onDelete();\r\n            } catch (error) {\r\n                console.error('Error al eliminar el producto:', error);\r\n                alert('Error al eliminar el producto');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input value={id} onChange={(e) => setId(e.target.value)} placeholder=\"ID del Producto\" />\r\n            <button onClick={buscarProducto}>Buscar Producto</button>\r\n            {producto && (\r\n                <div>\r\n                    <p>{producto.Nombre}</p>\r\n                    <button onClick={handleDelete}>Eliminar Producto</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}*/\r\n\r\nfunction GestionProductos() {\r\n    const navigate=useNavigate()\r\n    const handlerModificar =()=>{\r\n\r\n    }\r\n    const handlerAgregar =()=>{\r\n\r\n    }\r\n    const handlerEliminar =()=>{\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"titulo\">Gestión de Productos</h1>\r\n            <button onClick={handlerAgregar}>Agregar Producto</button>\r\n            <button onClick={handlerModificar}>Modificar Producto</button>\r\n            <button onClick={handlerEliminar}>Eliminar Producto</button>\r\n\r\n            { <FormularioAgregarProducto  />}\r\n            { <FormularioModificarProducto  />}\r\n            { <EliminarProducto  />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GestionProductos;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,yBAAyB,MAAM,6BAA6B;AACnE,OAAOC,2BAA2B,MAAM,+BAA+B;AACvE,SAASC,WAAW,QAAQ,kBAAkzCA,SAAAC,MAAA,IAAAC,OAAA;AA2CA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAACL,WAAW,CAAC,CAAC;EAC5B,MAAMM,gBAAgB,GAAEA,CAAA,KAAI,CAE5B,CAAC;EACD,MAAMC,cAAc,GAAEA,CAAA,KAAI,CAE1B,CAAC;EACD,MAAMC,eAAe,GAAEA,CAAA,KAAI,CAE3B,CAAC;EAED,oBACIN,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAIQ,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDZ,OAAA;MAAQa,OAAO,EAAER,cAAe;MAAAE,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DZ,OAAA;MAAQa,OAAO,EAAET,gBAAiB;MAAAG,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9DZ,OAAA;MAAQa,OAAO,EAAEP,eAAgB;MAAAC,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1DZ,OAAA,CAACJ,yBAAyB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9BZ,OAAA,CAACH,2BAA2B;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCZ,OAAA,CAACc,gBAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACV,EAAA,CAxBQD,gBAAgB;EAAA,QACNH,WAAW;AAAA;AAAAiB,EAAA,GADrBd,gBAAgB;AA0BzB,eAAeA,gBAAgB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}